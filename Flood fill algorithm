class Solution
{
    public int[][] floodFill(int[][] grid, int sr, int sc, int newcolor)
    {
        // Code here 
        int m=grid.length;
        int n=grid[0].length;

        if(grid[sr][sc]==newcolor){
            return grid;
        }
        dfs(grid,sr,sc,grid[sr][sc],m,n,newcolor);
        return grid;
    }
    private static void dfs(int[][] grid,int currentRow,int currentCol,int color,int m,int n,int newcolor){
        if(currentRow<0 || currentRow>=m || currentCol<0 || currentCol>=n || grid[currentRow][currentCol]!=color){
            return;
        }

        grid[currentRow][currentCol]=newcolor;// if we encountered 1 than changing it to new color as visited

        dfs(grid,currentRow+1,currentCol,color,m,n,newcolor);// down call
        
        dfs(grid,currentRow-1,currentCol,color,m,n,newcolor);// up call
        
        dfs(grid,currentRow,currentCol+1,color,m,n,newcolor);// right call
        
        dfs(grid,currentRow,currentCol-1,color,m,n,newcolor);//left call
        return;
    }
}
