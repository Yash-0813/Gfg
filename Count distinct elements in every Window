class Solution:
    def countDistinct(self, A, N, K):
        # Code here
        memo={}
        count=0
        l=[]
        for i in range(K):
           if A[i] not in memo:
               memo[A[i]]=1
               count=count+1
           else:
               memo[A[i]]=memo[A[i]]+1
       
        l.append(count)
       
        for i in range(K,N):
           if memo[A[i-K]]==1:
               del memo[A[i-K]]
               count=count-1
           else:
               memo[A[i-K]]-=1
           
           if A[i] not in memo:
               memo[A[i]]=1
               count+=1
           else:
               memo[A[i]]+=1
           l.append(count)
        return l



---------------------------------------------------2nd Approach-----------------------------------------------------------------------------------



class Solution:
    def countDistinct(self, nums, n, k):
        # Code here
        memo={}
        distinctcount=0
        answer=[]
        for i in range(k-1):
            currentval=nums[i]
            if currentval in memo:
               memo[currentval]+=1
            else:
                memo[currentval]=1
                distinctcount+=1
        release=0
        for accquire in range(k-1,n):
            currentval=nums[accquire]
            if(currentval in memo):
                memo[currentval]+=1
            else:
                memo[currentval]=1
                distinctcount+=1
            answer.append(distinctcount)
            discardedvalue=nums[release]
            memo[discardedvalue]-=1
            if(memo[discardedvalue]==0):
                del memo[discardedvalue]
                distinctcount-=1
            release+=1
        return answer
