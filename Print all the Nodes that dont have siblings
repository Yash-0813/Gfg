def noSibling(root):
    # code here
    ans=[]
    solve(root,ans)
    if(ans):
        ans.sort()
        return ans
    return [-1]
def solve(root,ans):
    if (root==None):
        return
    if(root.right==None and root.left!=None):
        ans.append(root.left.data)
    elif(root.right!=None and root.left==None):
        ans.append(root.right.data)
    solve(root.left,ans)
    solve(root.right,ans)


-------------------------------------------------DFS------------------------------------------------------------------------------------------------------------------


class Tree
{
    ArrayList<Integer> noSibling(Node root)
    {
        // code here
        ArrayList<Integer>answer=new ArrayList<>();
        solve(root,answer);
        
        if(answer.size()>0){
            Collections.sort(answer);
        }
        else{
            answer.add(-1);
        }
        return answer;
    }
    private static void solve(Node root,ArrayList<Integer>answer){
        if(root==null){
            return;
        }
        if(root.left!=null && root.right==null){
            answer.add(root.left.data);
        }
        
        if(root.right!=null && root.left==null){
            answer.add(root.right.data);
        }
        
        solve(root.left,answer);
        solve(root.right,answer);
        return;
    }
}
