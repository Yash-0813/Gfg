

class Solution:
    #Function to add two numbers represented by linked list.
    def addTwoLists(self, l1, l2):
        # code here
        # return head of sum listhead = ans = ListNode((l1.val + l2.val) % 10, Nonl1carry = (l1.val + l2.val)//10
        l1=self.reverseList(l1)
        l2=self.reverseList(l2)
        
        dummyNode=head=Node(-1)
        if(l1 is None):
            return l2
        if(l2 is None):
            return l1
        carry=0
        while(l1 and l2):
            firstval=l1.data
            secondval=l2.data
            total=firstval+secondval+carry
            
            carry=total//10
            total=total%10
                
            newNode=Node(total)
            dummyNode.next=newNode
            dummyNode=dummyNode.next
            l1=l1.next
            l2=l2.next
        while(l1):
                total=l1.data+carry
            
                carry=total//10
                total%=10
                newNode=Node(total)
                dummyNode.next=newNode
                dummyNode=dummyNode.next
                l1=l1.next
        while(l2):
                total=l2.data+carry
                carry=total//10
                total%=10
                newNode=Node(total)
                dummyNode.next=newNode
                dummyNode=dummyNode.next
                l2=l2.next
        if(carry==1):
            newNode=Node(1)
            dummyNode.next=newNode
        return self.reverseList(head.next)
        
        
    def reverseList(self, head):
            prev=None
            current=head
            while current is not None :
                tempNode=current.next
                current.next=prev
                prev=current
                current=tempNode
            return prev
