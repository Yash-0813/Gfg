class Tree
{
    public ArrayList<Integer> reverseLevelOrder(Node root) 
    {
        // code here
        Queue<Node>queue=new LinkedList<>();
        ArrayList<Integer>answer=new ArrayList<>();
        
        if(root==null){
            return answer;
        }
        queue.add(root);
        while(!queue.isEmpty()){
            int currentlevel=queue.size();
            
            while(currentlevel>0){
                Node currentNode=queue.remove();
                answer.add(currentNode.data);
                //will call right first ad we want reverse manner
                if(currentNode.right!=null){
                    queue.add(currentNode.right);
                }
                
                if(currentNode.left!=null){
                    queue.add(currentNode.left);
                }
                currentlevel-=1;
            }
        }
        Collections.reverse(answer);
        return answer;
    }
}      
