class Solution {
    public int uniquePathsWithObstacles(int[][] grid) {
        int n = grid.length;
        int m = grid[0].length;
        int[][] dp = new int[n][m];
        for (int[] row : dp)
        Arrays.fill(row, -1);
        
        return memo(grid,dp,n-1,m-1);
    }
    
    public int memo(int[][] grid, int[][] dp,int i,int j){                //Memoization
        if (i == 0 && j == 0) {
            if (grid[i][j] == 1) {
                return 0;
            }
        return 1;
        }
        
        if(i<0 || j<0)return 0;
        if(grid[i][j]==1)return 0;
        
        if(dp[i][j] != -1)
            return dp[i][j];
        
        int up = memo(grid,dp,i-1,j);
        int left = memo(grid,dp,i,j-1);
        
        return dp[i][j] = up+left;
    }
}
