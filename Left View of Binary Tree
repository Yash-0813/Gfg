def LeftView(root):
    answer=[]
    s=set()
    leftSideview(root,1,s,answer)
    return answer
def leftSideview(root,level,memo,answer):
    if(root==None):
        return
    if(level not in memo):
        memo.add(level)
        answer.append(root.data)
    leftSideview(root.left,level+1,memo,answer)
    leftSideview(root.right,level+1,memo,answer)



--------------------------------------------------------------------------------JAVA_----------------------------------------------------------------------------------


class Tree
{
    //Function to return list containing elements of left view of binary tree.
    ArrayList<Integer> leftView(Node root)
    {
      // Your code here
      HashMap<Integer,Integer>memo=new HashMap<>();
      ArrayList<Integer>answer=new ArrayList<>();
      leftsideview(root,0,memo,answer);
      return answer;
    }
    public static void leftsideview(Node root,int currentlevel,HashMap<Integer,Integer>memo,ArrayList<Integer>answer){
        if(root==null){
            return;
        }
        if(!memo.containsKey(currentlevel)){
            memo.put(currentlevel,root.data);
            answer.add(root.data);
        }
        leftsideview(root.left,currentlevel+1,memo,answer);
        leftsideview(root.right,currentlevel+1,memo,answer);
        
        return;
    }
}
