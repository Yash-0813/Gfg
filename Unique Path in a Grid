class Solution {
    static int mod=1000*1000*1000+7;
    static int uniquePaths(int m, int n, int[][] grid) {
        // code here
        int[][]dp=new int[m][n];
        for(int[]a:dp){
            Arrays.fill(a,-1);
        }
        return findpaths(grid,0,0,m,n,dp);
        
    }
    
    private static int findpaths(int[][]grid,int currentRow,int currentCol,int m,int n,int[][]dp){
        if(currentRow>=m || currentCol>=n || grid[currentRow][currentCol]==0){
            return 0;
        }
        if(grid[0][0]==0 || grid[m-1][n-1]==0){
            return 0;
        }
        if(currentRow==m-1 && currentCol==n-1){
            return 1;
        }
        if(dp[currentRow][currentCol]!=-1){
            return dp[currentRow][currentCol];
        }
        
        int rightmove=findpaths(grid,currentRow,currentCol+1,m,n,dp)%mod;
        int downmove=findpaths(grid,currentRow+1,currentCol,m,n,dp)%mod;
        return dp[currentRow][currentCol]=(rightmove+downmove)%mod;
    }
};
