class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        ArrayList<Integer> ans = new ArrayList<>();
        boolean[] visited = new boolean[V];
        
        depthfirstsearch(adj,0,visited,ans);
        return ans;    
    }
    
    static void depthfirstsearch(ArrayList<ArrayList<Integer>> adj,int currvertex,boolean[]visited,ArrayList<Integer> ans){
        if(visited[currvertex])
        return ;
        
        visited[currvertex]=true;
        ans.add(currvertex);
        
        List<Integer> neighbour = adj.get(currvertex);
        
        for(int currneighbour : neighbour){
            depthfirstsearch(adj,currneighbour,visited,ans);
        }
        
        return;
    }
}
